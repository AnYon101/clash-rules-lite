// 规则集通用配置
const ruleProviderCommon = {
  "type": "http",
  "format": "yaml",
  "interval": 86400
};
// 规则集配置
const ruleProviders = {
  "Apple": {
    ...ruleProviderCommon,
    "behavior": "classical",
    "url": "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Apple/Apple_Classical.yaml",
    "path": "./ruleset/loyalsoldier/apple.yaml"
  },
  "Google": {
    ...ruleProviderCommon,
    "behavior": "classical",
    "url": "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Google/Google.yaml",
    "path": "./ruleset/loyalsoldier/google.yaml"
  },
  "Netflix": {
    ...ruleProviderCommon,
    "behavior": "classical",
    "url": "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Netflix/Netflix.yaml",
    "path": "./ruleset/loyalsoldier/Netflix.yaml"
  },
  "Microsoft": {
    ...ruleProviderCommon,
    "behavior": "classical",
    "url": "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Microsoft/Microsoft.yaml",
    "path": "./ruleset/loyalsoldier/Microsoft.yaml"
  },  
  "OpenAI": {
    ...ruleProviderCommon,
    "behavior": "classical",
    "url": "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/OpenAI/OpenAI.yaml",
    "path": "./ruleset/loyalsoldier/OpenAI.yaml"
  },  
  "Gemini": {
    ...ruleProviderCommon,
    "behavior": "classical",
    "url": "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Gemini/Gemini.yaml",
    "path": "./ruleset/loyalsoldier/Gemini.yaml"
  },
  "Telegram": {
    ...ruleProviderCommon,
    "behavior": "classical",
    "url": "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Telegram/Telegram.yaml",
    "path": "./ruleset/loyalsoldier/Telegram.yaml"
  },
  "YouTube": {
    ...ruleProviderCommon,
    "behavior": "classical",
    "url": "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/YouTube/YouTube.yaml",
    "path": "./ruleset/loyalsoldier/YouTube.yaml"
  },
  "Steam": {
    ...ruleProviderCommon,
    "behavior": "classical",
    "url": "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Steam/Steam.yaml",
    "path": "./ruleset/loyalsoldier/Steam.yaml"
  },
  "Advertising": {
    ...ruleProviderCommon,
    "behavior": "classical",
    "url": "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Advertising/Advertising.yaml",
    "path": "./ruleset/loyalsoldier/Advertising.yaml"
  },
  "Hijacking": {
    ...ruleProviderCommon,
    "behavior": "classical",
    "url": "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Hijacking/Hijacking.list",
    "path": "./ruleset/loyalsoldier/Hijacking.yaml"
  },
  "Straight": {
    ...ruleProviderCommon,
    "behavior": "classical",
    "url": "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Lan/Lan.list",
    "path": "./ruleset/loyalsoldier/Straight.yaml"
  }
};
// 规则
const rules = [
  // 自定义规则

  // Loyalsoldier 规则集
  "RULE-SET,Apple,Apple",
  "RULE-SET,Google,Google",
  "RULE-SET,Netflix,Netflix",
  "RULE-SET,Microsoft,Microsoft",
  "RULE-SET,Gemini,Gemini",
  "RULE-SET,OpenAI,OpenAI",  
  "RULE-SET,Telegram,Telegram",
  "RULE-SET,YouTube,YouTube",
  "RULE-SET,Steam,Steam",
  "RULE-SET,Advertising,Advertising",
  "RULE-SET,Hijacking,Hijacking",
  "RULE-SET,Straight,Straight",
  // 其他规则
  "GEOIP,LAN,Straight,no-resolve",
  "GEOIP,CN,Straight,no-resolve",
  "MATCH,Final"
];
// 代理组通用配置
const groupBaseOption = {
  
};

// 程序入口
function main(config) {
  const proxyCount = config?.proxies?.length ?? 0;
  const proxyProviderCount =
    typeof config?.["proxy-providers"] === "object" ? Object.keys(config["proxy-providers"]).length : 0;
  if (proxyCount === 0 && proxyProviderCount === 0) {
    throw new Error("配置文件中未找到任何代理");
  }

  // 覆盖原配置中DNS配置


  // 覆盖原配置中的代理组
  config["proxy-groups"] = [
    {
      ...groupBaseOption,
      "name": "Proxies",
      "type": "select",
      "include-all": true,
      "icon": "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/icon/qure/color/Proxy.png"
    },
    {
      ...groupBaseOption,
      "name": "Google",
      "type": "select",
      "proxies": ["Proxies", "HK", "SG", "TW", "JP", "US"],
      "icon": "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/icon/color/google.png"
    },
    {
      ...groupBaseOption,
      "name": "YouTube",
      "type": "select",
      "proxies": ["Proxies", "HK", "SG", "TW", "JP", "US"],
      "icon": "https://raw.githubusercontent.com/HotKids/Rules/master/Quantumult/X/Images/Icons/YouTube.png"
    },
    {
      ...groupBaseOption,
      "name": "Apple",
      "type": "select",
      "proxies": ["Proxies", "DIRECT", "HK", "SG", "TW", "JP", "US"],
      "icon": "https://raw.githubusercontent.com/HotKids/Rules/master/Quantumult/X/Images/Icons/Apple.png"
    },
    {
      ...groupBaseOption,
      "name": "Microsoft",
      "type": "select",
      "proxies": ["Proxies", "DIRECT", "HK", "SG", "TW", "JP", "US"],
      "icon": "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/icon/qure/color/Microsoft.png"
    },
    {
      ...groupBaseOption,
      "name": "Telegram",
      "type": "select",
      "proxies": ["Proxies", "HK", "SG", "TW", "JP", "US"],
      "icon": "https://raw.githubusercontent.com/HotKids/Rules/master/Quantumult/X/Images/Icons/Telegram.png"
    },
    {
      ...groupBaseOption,
      "name": "Netflix",
      "type": "select",
      "proxies": ["Proxies", "HK", "SG", "TW", "JP", "US"],
      "icon": "https://raw.githubusercontent.com/HotKids/Rules/master/Quantumult/X/Images/Icons/Netflix.png"
    },
    {
      ...groupBaseOption,
      "name": "OpenAI",
      "type": "select",
      "proxies": ["Proxies", "HK", "SG", "TW", "JP", "US"],
      "icon": "https://raw.githubusercontent.com/HotKids/Rules/master/Quantumult/X/Images/Qure/ChatGPT.png"
    },
    {
      ...groupBaseOption,
      "name": "Gemini",
      "type": "select",
      "proxies": ["Proxies", "HK", "SG", "TW", "JP", "US"],
      "icon": "https://raw.githubusercontent.com/AnYon101/Subscribe/rm/Gemini-Icon.png"
    },
    {
      ...groupBaseOption,
      "name": "Steam",
      "type": "select",
      "proxies": ["Proxies", "DIRECT", "HK", "SG", "TW", "JP", "US"],
      "icon": "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/icon/color/steam.png"
    },  
    {
      ...groupBaseOption,
      "name": "Straight",
      "type": "select",
      "proxies": ["DIRECT", "Proxies", "HK", "SG", "TW", "JP", "US"],
      "icon": "https://fastly.jsdelivr.net/gh/clash-verge-rev/clash-verge-rev.github.io@main/docs/assets/icons/link.svg"
    },
    {
      ...groupBaseOption,
      "name": "Advertising",
      "type": "select",
      "proxies": ["REJECT", "DIRECT", "Proxies"],
      "icon": "https://raw.githubusercontent.com/AnYon101/Qure/master/IconSet/Color/Advertising.png"
    },
    {
      ...groupBaseOption,
      "name": "Hijacking",
      "type": "select",
      "proxies": ["REJECT", "DIRECT", "Proxies"],
      "icon": "https://raw.githubusercontent.com/AnYon101/Qure/master/IconSet/Color/Hijacking.png"
    },
    {
      ...groupBaseOption,
      "name": "Final",
      "type": "select",
      "proxies": ["DIRECT", "Proxies", "HK", "SG", "TW", "JP", "US"],
      "icon": "https://raw.githubusercontent.com/AnYon101/Qure/master/IconSet/Color/Final.png"
    },
    {
      ...groupBaseOption,
      "name": "HK",
      "type": "select",
      "filter": "(?i)港|hk|hongkong|hong kong|HK",
      "include-all": true,
      "icon": "https://raw.githubusercontent.com/Orz-3/mini/master/Color/HK.png"
    },
    {
      ...groupBaseOption,
      "name": "SG",
      "type": "select",
      "include-all": true,
      "filter": "新加坡|🇸🇬 |SG|狮城|(?i)Singapore",
      "icon": "https://raw.githubusercontent.com/Orz-3/mini/master/Color/SG.png"
    },
    {
      ...groupBaseOption,
      "name": "TW",
      "type": "select",
      "include-all": true,
      "filter": "台湾|TW|🇹🇼|(?i)Tai",
      "icon": "https://raw.githubusercontent.com/Orz-3/mini/master/Color/CN.png"
    },
    {
      ...groupBaseOption,
      "name": "JP",
      "type": "select",
      "include-all": true,
      "filter": "日本|川日|东京|大阪|泉日|埼玉|沪日|深日|[^-]日|JP|Japan|🇯🇵",
      "icon": "https://raw.githubusercontent.com/Orz-3/mini/master/Color/JP.png"
    },
    {
      ...groupBaseOption,
      "name": "US",
      "type": "select",
      "include-all": true,
      "filter": "美|美国|US|United States",
      "icon": "https://raw.githubusercontent.com/Orz-3/mini/master/Color/US.png"
    },
  ];

  // 覆盖原配置中的规则
  config["rule-providers"] = ruleProviders;
  config["rules"] = rules;

  // 返回修改后的配置
  return config;
}
